$blue: #00a8f7;
$pink: #d800f7;
$bar-bg: #202020;
$green: #4caf50;
$yellow: #ffeb3b;
$bk: #000;
$bar: $blue;
$bkgrnd: #01010e;
$btn-width: 10rem;

@font-face {
    font-family: euro-bold;
    src: url('/lib/EurostileLTStd-BoldEx2.otf');
}

@font-face {
    font-family: euro;
    src: url('/lib/EurostileLTStd-Ex2.otf');
}

@keyframes twoColor {
    0% {
        fill: $blue;
        background-color: $blue;
    }

    50% {
        fill: $pink;
        background-color: $pink;
    }

    100% {
        fill: $blue;
        background-color: $blue;
    }
}

#stop1 {
    animation: change-color1 2s ease-in-out infinite alternate;
}

#stop2 {
    animation: change-color2 5s ease-in-out infinite alternate;
}

@keyframes change-color1 {
    0% {
        stop-color: $pink;
    }

    100% {
        stop-color: $yellow;
    }
}

@keyframes change-color2 {
    0% {
        stop-color: $blue;
    }

    100% {
        stop-color: $pink;
    }
}

rect.pulsing {
    animation: twoColor 3s linear infinite;
}

.button.pulsing.active {
    animation: twoColor 3s linear infinite;
}

#Petals.pulsing {
    fill: url(#grad1);
    opacity: 0.6;

    .petal {
        opacity: 0.6 !important;
    }
}

html,
body {
    margin: 0;
    border: 0;
    height: 100%;
    width: 100%;
    box-sizing: border-box;

    * {
        box-sizing: border-box;
    }
}

body {
    background-color: $bkgrnd;
}

svg.label {
    height: 100%;

    text {
        fill: white;
        font-family: euro;
        writing-mode: tb;
        alignment-baseline: after-edge;
        font-size: 36px;
    }
}

#bpm-label {
    left: 40px;
}

#beat {
    width: $btn-width;

    #beats {
        display: flex;
        flex-direction: row;
        justify-content: space-between;

        .button {
            width: 45%;
            margin-top: 15px;
            padding: 10px;
        }
    }
}

#title {
    top: initial !important;

    right: 0;
    bottom: 40px;

    h2 {
        margin-bottom: 0;
    }
}

#beat-label {
    right: 0;
    width: 40px;
}

/* Customize the label (the container) */
.sci-ui {
    display: block;
    position: relative;
    cursor: pointer;
    font-size: 22px;
    user-select: none;


    /* Hide the browser's default radio button */
    input {
        position: absolute;
        opacity: 0;
    }

    button,
    a {
        font-family: euro;
        width: $btn-width;
    }

    &.radio {

        /* Create a custom radio button */
        .checkmark {
            position: absolute;
            top: 0;
            left: 0;
            height: 25px;
            width: 25px;
            background-color: #eee;
            border-radius: 50%;
        }

        /* On mouse-over, add a grey background color */
        &:hover input~.checkmark {
            background-color: #ccc;
        }

        /* When the radio button is checked, add a blue background */
        input:checked~.checkmark {
            background-color: $blue;
        }

        /* Create the indicator (the dot/circle - hidden when not checked) */
        .checkmark:after {
            content: "";
            position: absolute;
            display: none;
        }

        /* Show the indicator (dot/circle) when checked */
        input:checked~.checkmark:after {
            display: block;
        }

        /* Style the indicator (dot/circle) */
        .checkmark:after {
            top: 9px;
            left: 9px;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: white;
        }


        /* On mouse-over, add a grey background color */
        .container:hover input~.checkmark {
            background-color: #ccc;
        }

        /* When the checkbox is checked, add a blue background */
        .container input:checked~.checkmark {
            background-color: $blue;
        }

        /* Create the checkmark/indicator (hidden when not checked) */
        .checkmark:after {
            content: "";
            position: absolute;
            display: none;
        }



        /* Show the checkmark when checked */
        .container input:checked~.checkmark:after {
            display: block;
        }

        /* Style the checkmark/indicator */
        .container .checkmark:after {
            left: 9px;
            top: 5px;
            width: 5px;
            height: 10px;
            border: solid white;
            border-width: 0 3px 3px 0;
            -webkit-transform: rotate(45deg);
            -ms-transform: rotate(45deg);
            transform: rotate(45deg);
        }
    }

    &.checkbox {

        /* Create a custom checkbox */
        .checkmark {
            position: absolute;
            top: 0;
            left: 0;
            height: 25px;
            width: 25px;
            background-color: #eee;
        }

        /* On mouse-over, add a grey background color */
        &:hover input~.checkmark {
            background-color: #ccc;
        }

        /* When the checkbox is checked, add a blue background */
        input:checked~.checkmark {
            background-color: $blue;
        }

        /* Create the checkmark/indicator (hidden when not checked) */
        .checkmark:after {
            content: "";
            position: absolute;
            display: none;
        }

        /* Show the checkmark when checked */
        input:checked~.checkmark:after {
            display: block;
        }

        /* Style the checkmark/indicator */
        .checkmark:after {
            left: 9px;
            top: 5px;
            width: 5px;
            height: 10px;
            border: solid white;
            border-width: 0 3px 3px 0;
            -webkit-transform: rotate(45deg);
            -ms-transform: rotate(45deg);
            transform: rotate(45deg);
        }
    }


    .button {
        background-color: $blue;
        border-radius: 3px;
        /* Green */
        border: none;
        color: white;
        padding: 15px 32px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;

        &.outline {
            background-color: transparent;
            border: 3px solid $blue;
            /* Green */

            &:hover {
                background-color: #072135;
            }

            &.active {
                background-color: $blue;
                color: white;
            }
        }
    }
}

.ticks {
    font: 10px sans-serif;
}

h1,
h2 {
    color: white;
    margin-top: 0;
    margin-bottom: 1rem;
    text-transform: uppercase;
}

h1 {
    font-size: 28px;
    font-family: euro-bold;
}

h2 {
    font-size: 14px;
    font-family: euro;
}



main {
    width: 100%;
    padding-top: 10px;
    padding-left: 5%;
    height: 100%;
    display: flex;
    flex-direction: row;
}

#left {
    padding-top: 50px;
    left: 0;
    position: relative;
    width: 400px;

    #top {
        height: 580px;
        position: relative;

        >* {
            position: absolute;
            top: 0;
        }

        #beat {
            position: absolute;
            right: 45px;

            #beat-buttons {
                display: flex;
                flex-direction: column;

                a.button:not(:first-child) {
                    margin-top: 15px;
                }
            }
        }
    }

    #bottom {
        >* {
            margin-top: 20px;
        }

        #power-buttons {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
        }
    }
}


#right {
    width: 100%;
    margin: auto;
    height: 100%;

    #warp {
        overflow: hidden;
        position: relative;
        width: 95vh;
        height: 95vh;
        margin: auto;

        canvas {
            width: 100%;
            max-width: 100%;
            height: 100%;
            max-height: 100%;
            clip-path: url('#clip');
        }

        canvas::before {
            content: '';
            clip-path: url('#clip');
        }

        svg#table-svg {
            position: absolute;
            height: 100%;
            width: 100%;
            mix-blend-mode: hard-light;
            z-index: 99;

            .petal {
                opacity: 0;
            }

            .laser-cut {
                fill: rgba(200, 200, 200, 0.04);
            }

            #Reticle {
                transform-origin: center;
                transform: rotate(0deg);
                transition: all 2.2s ease-in-out;
            }

            #Centerpiece_Frame {
                transform-origin: center;
                transform: rotate(0deg);
                transition: all 3.2s ease-in-out;

                path {
                    stroke: white;
                }
            }

            .cls-8 {
                stroke: white;
            }

            .dot {
                fill: rgba(255, 255, 255, 0.6);
            }

            .cls-11 {
                fill: #292929;
                fill-opacity: 0.3;
            }

            .cls-12 {
                fill: rgba(121, 121, 121, 0.2);
            }

            .cls-7 {
                // accents
                stroke: #8e8e8e;
            }

            #Petal_Edges {
                path {
                    fill: rgba(138, 138, 138, 0.6) !important;
                }
            }

            .cls-1 {
                fill: rgba(49, 49, 49, 0.06);
            }

            .cls-9 {
                fill: rgba(51, 51, 51, 0.08);
            }

            .cls-7 {
                fill: rgba(0, 0, 0, 0.08);
            }
        }
    }
}

.slider {

    text {
        fill: white;
        font-family: euro;
        alignment-baseline: middle;
    }

    .track,
    .track-overlay {
        fill-opacity: 0;
        stroke-linecap: round;
    }

    .track {
        stroke: #000;
        stroke-opacity: 0.3;
        stroke-width: 2px;
    }

    .track-overlay {
        pointer-events: stroke;
        stroke-width: 50px;
        stroke: transparent;
        cursor: crosshair;
    }

    .handle {
        fill: $bar;
    }

    .track-inset {
        fill-opacity: 1;
        fill: $bar-bg;
    }
}

#beat-widget {
    label {
        color: white;
        text-transform: uppercase;
    }

    .controls {
        display: flex;
        flex-direction: row;
        justify-content: space-between;

        label,
        label>* {
            color: white;
            font-family: euro;
            text-transform: uppercase;
        }

        .col {
            display: flex;
            flex-direction: column;
            justify-content: space-between;

            &.families {
                justify-content: space-around;
            }

            &.reverb {
                margin-left: 2rem;
            }
        }

        .elements {
            .button {
                border-radius: 25px;
                font-family: euro;

                &:not(:last-child) {
                    margin-bottom: 10px;
                }
            }
        }
    }
}